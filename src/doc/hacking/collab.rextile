
h1. Collaboration and Version Control

AFC uses "Mercurial":-hg for version control. Because we currently do not have a full blown Mercurial server install, we use _bundles_ (.hg files containing compressed changesets) to exchange changesets.

<%= toc %>


h2. Setup

h3. Mercurial

You should install Mercurial however is appropriate for your OS.

Next, configure it. Create or edit your "@.hgrc@ file":-hgrc as follows:

<pre><code
>[ui]
username=you@email.com

[diff]
git=true
</code></pre>

The latter is important because AFC's source contains a number of binary files which standard diff cannot handle.


h3. Repository

To get an initial copy of the repository, you download http://arrenbrecht.ch/hg/afc-trunk.hg, and then run:

	mkdir afc-trunk
	cd afc-trunk
	hg init
	hg pull -u ../afc-trunk.hg
	cd ..


h2. Contributing


h3. Non-committers

In order to contribute, I suggest you then clone the repo as follows:

	hg clone afc-trunk dev
	cd dev
	hg qinit -c

This enables the "mq extension to Mercurial":-hgq which lets you manage a patch queue, that is, a stack of patches which you want to contribute.

You start your first patch using

	hg qnew -m "Commit message goes here" my-cool-change.patch

do your changes, verify them with @hg stat@ and @hg diff@, and finally commit them to the patch (not the repo) using

	hg qrefresh

To track new or deleted files and renames, use @hg addremove@. The command @hg addremove -s ?@ where @?@ is a percentage of similarity can be used to track renames. First do @hg addremove -n -s ?@ with @?@ set to 70, for instance, to see if it does the right thing, then tweak @?@ and finally drop the @-n@ when you're satisfied.

Then you send the patch to one of the committers. I strongly suggest you split your changes into small, self-contained patches. To do this, you can work on multiple patches in parallel, as described in the "mq tutorial":-hgq. The key "queue commands":-hgqc are @qnew@, @qrefresh@, @qpop@, and @qpush@.


h3. Committers

Committers should clone the original repo as follows:

	hg clone afc-trunk afc-my-name
	
and then download and pull all desired .hg files of other committers into @afc-my-name@.

To do your own work, you:

	hg clone afc-my-name dev
	cd dev
	hg qinit -c

Then work in @dev@ as shown above. However, to commit, you do

	cd ../afc-my-name
	hg pull -u ../dev
	hg bundle ../afc-my-name.hg ../afc-trunk

and upload the resulting @afc-my-name.hg@ file to arrenbrecht.ch.


[-hgq]http://hgbook.red-bean.com/hgbookch12.html#x16-26500012
[-hgqc]http://hgbook.red-bean.com/hgbookap2.html#x20-342000B
[-hgrc]http://www.selenic.com/mercurial/hgrc.5.html

