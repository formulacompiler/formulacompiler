
h1. Release Notes


Lists the new features, improvements, and fixes for each release of SEJ. You may also want to look at:

	* "Current Limitations":limitations.htm
	* "Roadmap":roadmap.htm

	
h2. Release 0.8.2

h5. *Changed!*

	* Dropped support for @Operator.MIN@, @Operator.MAX@, and @Operator.NOOP@. Use @Function.MIN@ and @Function.MAX@ instead.

h5. Documented

	* Checked whether "the engine format needs to be more robust":dev/2007-11-22_robust_storage.htm for the future. It's OK already.
	
	
h2. Release 0.8.1
	
h5. Better

	* Added support for naive "string comparisons":reference/strings.htm. By _naive_ I mean that they do not handle the fancy code-page stuff in Excel yet. It's basically @String.compareToIgnoreCase()@.
	* Redid the "dev journal":dev/index.htm so it indexes automatically. Added two entries.
	
	
h2. Release 0.8.0

h5. *Changed!*

	* Dropped support for JRE 1.4. This could be re-enabled with some effort, if anyone really needs it.
	* Dropped support for @Operator.AND@ and @Operator.OR@. Use @Function.AND@ and @Function.OR@ instead.

h5. New

	* First version of "hacking docs":hacking/index.htm.
	* Generation of byte-code compiler methods from "plain Java template methods":hacking/addprimitive.htm to implement low-level functions.
	* "Expression rewriting":hacking/addrewrite.xhtml to implement high-level functions.
	* @FOLD@ and @LET@ for "rewriting of aggregators":hacking/addagg.xhtml.
	* @ABS()@, @VAR()@, @VARP()@, @FACT()@, and @COMBIN()@ are now supported.
	* Added generic test harness which allows me to fairly quickly debug users's sheets.

h5. Better

	* @SpreadsheetBuilder.newCell()@ added for creating blank cells.
	* A number of automated tests compare generated .jar files against baseline versions to detect unwanted changes.
	* Documentation source now in the project in "Rextile":-rex format. Used to be in a custom format and only resulting HTML files were versioned in the project.
	* "Build script":hacking/build.htm greatly streamlined and documented. Made it properly configurable/portable.
	* Added download for build tools package to the main page.
	* Source distribution now includes "Eclipse project setup":hacking/ide.htm with custom Java formatting rules and all.
	* Added internal logging package for structured (indented) debug log output.
	* Temporary build artefacts now get written to @temp/@ rather than @build/@.
	* Constant folding support for @AND@ and @OR@.
	* Eliminated redundant definitions of A1- and R1C1-style expression scanners.

h5. Fixed

	* Excel spreadsheet saver now properly formats dates and booleans (added tests, too). Fixed issue with columns widths and default fonts not being copied from the template properly.
	* Code coverage ant targets no longer run the caching speed test as the speed varies too much when coverage tracking is enabled.
	* Use of @_FOLD@ fixes a number of bugs with aggregation over nested sections.
	* @SEARCH@ with wildcards had bugs.


h2. Release 0.7.3

h5. New

	* Support for "writing initial spreadsheets":tutorial/generatesheet.htm added.

h5. Better

	* SEJ now supports multiple sheets in an Excel workbook and resolves "references across sheets":reference/values.htm properly.
	* The interface @Spreadsheet.Cell@ now gives access to the formula text using @getExpressionText()@.
	* Call chaining for spreadsheet builder methods (they return @this@ instead of @void@).


h2. Release 0.7.2

h5. Better

	* SEJ now automatically "converts numeric values to strings":reference/strings.htm when a @String@-valued output method is bound to a numeric cell.


h2. Release 0.7.1

h5. Better

	* Much improved (and tested) "error reporting":tutorial/errors.htm. Error messages should now contain all information for users to be able to pinpoint the source of a problem in their original spreadsheet.
	* Code coverage analysis added using "cobertura":http://cobertura.sourceforge.net/ and "emma":http://emma.sourceforge.net/. Use @ant cover@ and @ant emma@ to run them, then check @build/coverage/index.html@ or @build/coverage/coverage.html@ for the results.

h5. Fixed

	* @MATCH@ now properly handles type arguments other than 1, 0, and -1.


h2. Release 0.7.0

h5. New

	* "Function reference":reference/index.htm in the docs.
	* "String support":reference/strings.htm.

h5. Better

	* Much "improved Excel function tests":dev.htm#2006-08-30, used as base for reference docs.
	* Improved error messages should give clearer indication of the source of a problem.

h5. Fixed

	* Fixed-scale @BigDecimal@ engines now return all values with proper scale.
	* Boolean values are treated as numbers in constant folder, too.
	* Enabled proper constant folding for @AND@ and @OR@ when they are aggregators.


h2. Release 0.6.3

h5. Better

	* Documented and tested the use of a "derived output class providing default implementations":tutorial/bindcells.htm#Defaults with a factory method returning a superclass.


h2. Release 0.6.2

h5. Better

	* Implemented "repeating sections with outputs":tutorial/repeatingsections_withoutputs.htm.
	* Improved structure of "tutorial index":tutorial/index.htm.
	* Allow setting of a "custom parent class loader":tutorial/customclassloader.htm for compiled and loaded engines.
	* Updated to "JExcelAPI":http://jexcelapi.sourceforge.net/ version "2.6.0":http://sourceforge.net/project/shownotes.php?release_id=413377&group_id=79926, released on April 27, 2006.
	* Updated to "Retrotranslator":http://retrotranslator.sourceforge.net/ version "1.0.7":http://sourceforge.net/project/showfiles.php?group_id=153566&package_id=170323&release_id=429628, released on July 4, 2006.

h5. Fixed

	* The Ant build script now runs the tutorial tests for both the current JRE and JRE 1.4. They fell through so far because their class names do not end in @Test@ for easier citability.
	* As a consequence of the above, I have fixed the automatic type conversions so that they run on JRE 1.4 (which lacks, for instance, @static Byte valueOf(byte)@ in class @Byte@).
	* Also as a consequence of the above, unscaled @BigDecimal@ division is no longer supported on JRE 1.4.
	* Give a clearer error message when an outer cell references an inner cell of a section without aggregating it.


h2. Release 0.6.1

h5. Better

	* The "sample spreadsheets in the documentation":tutorial/basics.htm are now cited from the real spreadsheet files used in the automated tests (using "JCite":http://arrenbrecht.ch/jcite/ again). This ensures their correctness and improves the formatting.
	* The function @MATCH@ is supported again. However, the last argument (the match type) must be constant, and the second argument (the match range) cannot reference a repeating section yet.
	* The function @INDEX@ is now supported for one- and two-dimensional lookup. However, the range argument cannot reference a repeating section yet.


h2. Release 0.6.0

h5. Changed

	* In @ComputationFactory@, renamed @newInstance()@ to @newComputation()@.

h5. New

	* Implemented input-only "repeating sections":tutorial/repeatingsections.htm. @AND@ and @OR@ are not yet supported as aggregators on them, though.
	* Implemented support for Excel functions @TODAY()@ and @COUNT()@. (Although @COUNT@ does not yet handle empty cells properly - this is because SEJ generally does not.)

h5. Better

	* Documented, tested and completed the handling of the full set of allowed "input method parameters":tutorial/bindbyname.htm.
	* Refactored the binding tutorial into more separate pages.
	* Added support for defining and referencing ranges to the "@SpreadsheetBuilder@":javadoc/sej/SpreadsheetBuilder.html.

h5. Fixed

	* Added some missing @switch@ @break@ statements discovered by Eclipse's new check (should not ever trigger anyway, but still...)
	* Unbound output parameter combinations now throw @IllegalArgumentException@ when there is now default implementation of the output method.


h2. Release 0.5.4

h5. New

	* "Parametrized output methods":tutorial/binding.htm#BindByName are supported now. The interactive demo thus runs again, but does not yet look good because there are some info methods missing on the spreadsheet interface.

h5. Better

	* The examples for "basic cell binding":tutorial/binding.htm#BindCells and "parametrized binding":tutorial/binding.htm#BindByName are now cited from automated tests.


h2. Release 0.5.3

h5. Better

	* SEJ now ships the new @sej-<ver>-srcjar.zip@, containing @sej-src.jar@ and @sej-doc.jar@ which contain, respectively, the entire source code and documentation for SEJ. Not included are the examples and test cases. These two .jar files make attaching source and docs in modern IDEs very easy.
	* Clarified behaviour differences between Excel and SEJ with respect to @null@ input values. See "tutorial on type conversions":tutorial/type_conversion.htm.
	* Implemented @AND@, @OR@, @NOT@, and comparisons outside of the test of an @IF@.

h5. Fixed

	* Fixed parsing of cell/range names containing dots (@.@) in the R1C1-style parser. Added unit test for parsing names (only had a system test before which did not test the R1C1 parser).


h2. Release 0.5.2

h5. Fixed

	* SEJ should now accept all valid cell and range names according to Excel's online help. In particular, Excel names may now contain dots (@.@) and do no longer have to start with an underscore or at least two alphabetic characters.


h2. Release 0.5.1

h5. Better

	* Type conversion is now "documented":tutorial/type_conversion.htm.
	* All exceptions are now called @...Exception@, not @...Error@.
	* Can call static input methods.

h5. Fixed

	* Removed the superfluous @Engine*.jar@ files from the binary distribution.
	* Can use non-static local classes as inputs again.


h2. <a name="0.5.0">Release 0.5.0</a>

h5. New

	* The new "@EngineBuilder@":javadoc/sej/EngineBuilder.html supports the "most typical use-case":tutorial/basics.htm out of the box. The @SpreadsheetByNameBinder@ and @SpreadsheetNameCreator@ give more fine-grained control over this. This use-case is used to provide the motivation for using SEJ in the tutorial.
	
	* Separated the concept of a computation engine (collection of computation classes) from the concept of a computation factory. "Engine":javadoc/sej/runtime/Engine.html is now the thing being loaded and "saved":javadoc/sej/SaveableEngine.html. "Factory":javadoc/sej/runtime/ComputationFactory.html creates now computation instances. The factory can be forced to implement an application-specific interface or base class, which makes SEJ even more non-intrusive on application code (see use-case above).
	
	* SEJ now converts between its internal numeric type and basically all numeric Java types in the input and output method result types. To support this, scaled @long@ values in the interface must now be "annotated with @@ScaledLong@":tutorial/numeric_type.htm#long. (While already tested fairly rigorously, the full documentation for this feature is still missing.)
	
	* Saved engines are now normal .jar files, which can be inspected like any other .jar file. The generated classes are normal .class entries in the .jar file.
	
	* The new "@SpreadsheetBuilder@":javadoc/sej/SpreadsheetBuilder.html supports "constructing spreadsheets in memory":tutorial/buildsheet.htm.

h5. Better

	* I have reorganized the packages. Everything internal is now in @sej.internal@. Everything need for the loading and running of compiled engines is in "@sej.runtime@":javadoc/sej/runtime/package-summary.html, @sej.internal.runtime@, and @sej.internal.bytecode.runtime@. The compile-time public API is in "@sej@":javadoc/sej/package-summary.html.
	
	* I have rigorously trimmed the API again. Every non-trivial entity is now represented by an interface in the API, not a class. The central class "@sej.SEJ@":javadoc/sej/SEJ.html provides factory methods for all of these.
	
	* The fairly monolithic low-level interface @sej.Compiler@ has been broken up to reflect the processing chain: "@sej.Spreadsheet@":javadoc/sej/Spreadsheet.html, "@sej.SpreadsheetBinder@":javadoc/sej/SpreadsheetBinder.html, "@sej.SpreadsheetBinding@":javadoc/sej/SpreadsheetBinding.html, "@sej.SpreadsheetCompiler@":javadoc/sej/SpreadsheetCompiler.html. Most of these components have a consistent instantiation protocol with a factory method in @sej.SEJ@ and a configuration class called @XY.Config@ which supplies parameters to new instances. This is in preparation of being able to expose the internal computation model as a lightweight alternative to the spreadsheet model.

	* New base error class, @sej.runtime.SEJError@, from which all others are derived. Better separation of errors into @sej.SpreadsheetError@, @sej.CompilerError@, and @sej.runtime.EngineError@.


h2. Release 0.4.2


h5. New

	* You can now generate engines that support "internal caching":tutorial/caching.htm of inputs, outputs and multiply referenced intermediate values.

h5. Better

	* The @BigDecimal@ numeric type now generates vastly more efficient constant values. They are preconstructed in @private static final BigDecimal@ fields, using @BigDecimal.valueOf( long, int )@ wherever possible.


h2. Release 0.4.1

h5. New

	* Implemented "scaled @long@ support":tutorial/numeric_type.htm#long.

h5. Better

	* @sej.NumericType@ now has support routines for value conversions.
	* @sej.runtime@ is a new package holding the runtime support classes. They used to be in @sej.engine@.
	* Added automated tests for serialization and deserialization of engines, as well as the use of the runtime-only jar for deserialization.


h2. Release 0.4.0

h5. New

	* Implemented "@BigDecimal@ support":tutorial/numeric_type.htm#BigDecimal.

h5. Better

	* Removed ASM dependency from the base @Operator@ class.
	* Removed general expression interpreter support. Introduced special constant folder support instead (much faster).

h5. Fixed

	* Exponentiation (@A1^A2@) and taking a percentage (@A1%@) now work when applied to input cells. Added this to the test suite.


h2. Release 0.3.2

h5. Better

	* SEJ ships with two new .jars, @sej-jre1.4.jar@ and @sej-runtime-jre1.4.jar@, which have been converted from Java 5 to Java 1.4 by "Retrotranslator":http://retrotranslator.sourceforge.net/. Use these .jars if you plan to deploy SEJ on the JRE 1.4. All unit tests are now run automatically using both the JDK 1.5 and a JRE 1.4 during builds to ensure compatibility.
	* I dropped @Engine.Computation@. You no longer have to subclass this thing when defining an output type. As a consequence, you can now define an output as an interface instead of a class.
	* I moved the @saveTo()@ functionality from @EngineFactory@ to @Compiler@. That way, compiled engines don't need the interface to the compiler, making @sej-runtime.jar@ a little smaller still.
	* SEJ accepts @boolean@ input values and can return both @boolean@ and @Date@ values.
	* Moved all test and sample data to folders named @testdata/sej@ for better compatibility with the source layout at Abacus.

h5. Fixed

	* I fixed the contents of the distribution packages so the documentation style-sheets are included.
	* The run-time .jar now works (that is, contains all the required stuff).


h2. Release 0.3.1

This minor release changes the name @Compiler.NameSpace@ to @Compiler.Section@. Since we are no longer binding by name, the term _NameSpace_ is no longer appropriate.

In addition @Compiler.getRootNameSpace()@ has been shortened to @Compiler.getRoot()@.


h2. Release 0.3.0

This is the first release with the new API based on "binding cells to native types":tutorial/binding.htm. The interpreter has been dropped and replaced by a byte code compiler producing very fast code.
