<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
    <title>Type Conversions in SEJ - arrenbrecht.ch</title>
    <style type="text/css" media="screen">
        @import "../style.css";
	
    </style>
    <link rel="stylesheet" type="text/css" media="print" href="../printstyle.css" />
</head>
<body>
    <div class="all">
        <div class="nav">
            <p class="nav">
<a href="http://www.arrenbrecht.ch/">arrenbrecht.ch</a> &gt;
<a href="../index.htm">SEJ</a> &gt;
<a href="index.htm">Tutorial</a> &gt;

			</p>
        </div>
        <div class="title">
            <h1>
                Type Conversions in SEJ</h1>
        </div>
        
        
        <div class="content">
        
<p>Engines generated by SEJ perform all internal computations using a <a href="numeric_type.htm#GlobalSetting">single</a>, user-defined <a href="numeric_type.htm">numeric type</a>. At the moment, this can be <tt>double</tt>, <tt>BigDecimal</tt>, <tt>long</tt>, or <a href="numeric_type.htm#long">scaled <tt>long</tt></a>. The engine therefore must</p>
<ul class="spaced">
<li>convert all input values obtained from your input methods to its internal type, and</li>
<li>convert all output values from its internal type to the return type of your output methods.</li>
</ul>

<h2>Input Conversions</h2>
<p>Here's the set of supported input types (the <tt>@ScaledLong</tt> annotation works with all supported scales, not just <tt>6</tt>, of course):</p>
<p>[jc:sej.tutorials.TypeConversion:---- Input]</p>
<p>The rules are:</p>
<ul class="spaced">
<li>Values are silently truncated or reduced in precision to fit the target type (like Java does).</li>
<li><tt>null</tt> values are silently converted to zero (unlike Java).</li>
</ul>

<h5>Warning</h5>
<p>The latter rule is different from Excel, which converts empty cells situatively. An empty cell is, for instance, ignored by <tt>PRODUCT</tt> and string concatenation in Excel. As of this version of SEJ, a <tt>PRODUCT</tt> involving an input value which is <tt>null</tt> returns zero, not the product of all non-null numbers.
<br/><b>This may change to be more compatible with Excel in a future release of SEJ.</b></p>

<h2>Output Conversions</h2>
<p>The set of supported output types is the same as that for input types (again, the <tt>@ScaledLong</tt> annotation works with all supported scales, not just <tt>6</tt>, of course):</p>
<p>[jc:sej.tutorials.TypeConversion:---- Output]</p>
<p>The rules are similar, too:</p>
<ul class="spaced">
<li>Values are silently truncated or reduced in precision to fit the target type (like Java does).</li>
<li>SEJ never returns <tt>null</tt>.</li>
</ul>

<h5>Warning</h5>
<p>The latter rule implies that, even if you map an output method to an empty spreadsheet cell, or to one that is mapped to an input method returning <tt>null</tt>, SEJ will return zero, not <tt>null</tt>.
<br/><b>This may change in a future release of SEJ.</b></p>        </div>
        <div class="footer">
<p>Copyright &copy; 2006 Peter Arrenbrecht. All rights reserved.</p>        </div>
    </div>
</body>
</html>