// -------------------------- org.formulacompiler.gen.$Factory

package org.formulacompiler.gen;
import org.formulacompiler.runtime.Computation;
import org.formulacompiler.runtime.ComputationFactory;
import org.formulacompiler.runtime.internal.Environment;
import org.formulacompiler.tutorials.Decompilation;

public final class $Factory
    implements ComputationFactory, Decompilation.MyFactory
{
    private final Environment $environment;
    
    public $Factory(Environment environment) {
        $environment = environment;
    }
    
    public final Computation newComputation(Object object) {
        return new $Root((Decompilation.MyInputs) object, $environment);
    }
    
    public final Decompilation.MyOutputs newOutputs
        (Decompilation.MyInputs myinputs) {
        return new $Root(myinputs, $environment);
    }
}

// -------------------------- org.formulacompiler.gen.$Root

package org.formulacompiler.gen;
import org.formulacompiler.runtime.Computation;
import org.formulacompiler.runtime.internal.Environment;
import org.formulacompiler.runtime.internal.RuntimeDouble_v2;
import org.formulacompiler.tutorials.Decompilation;

final class $Root implements Computation, Decompilation.MyOutputs
{
    private final Decompilation.MyInputs $inputs;
    final Environment $environment;
    
    $Root(Decompilation.MyInputs myinputs, Environment environment) {
        $environment = environment;
        $inputs = myinputs;
    }
    
    final double get$0() {
        return RuntimeDouble_v2.max(get$1(), get$2());
    }
    
    public final double rebate() {
        return get$0();
    }
    
    final double get$1() {
        return $inputs.customerRebate();
    }
    
    final double get$2() {
        return $inputs.articleRebate();
    }
}