# Abacus Formula Compiler Spreadsheet Model Description v1.0
# WARNING: THIS FILE MUST NOT CONTAIN HARD TABS!
---

sheets:

- name: Sheet1
  rows:
  - cells:
    - const: Expected
    - const: Actual
    - const: Inputs
    - null
    - null
    - null
    - null
    - null
    - null
    - const: # of Inputs
    - const: Name
    - const: Highlight
    - const: Excel says
    - const: Skip for
  - cells:
    - const: 3.0
    - expr: =(RC[1] + RC[2])
    - const: 1.0
    - const: 2.0
    - null
    - null
    - null
    - null
    - null
    - const: 2.0
    - const: Addition (+)
    - const: +
  - cells:
    - const: 12.0
    - expr: =((RC[1] + RC[2]) + RC[3])
    - const: 5.0
    - const: 4.0
    - const: 3.0
    - null
    - null
    - null
    - null
    - const: 3.0
  - cells:
    - const: 6.6
    - expr: =((RC[1] + RC[2]) + RC[3])
    - const: 1.1
    - const: 2.2
    - const: 3.3
    - null
    - null
    - null
    - null
    - const: 3.0
    - const: ...
  - cells:
  - cells:
    - const: 2.0
    - expr: =(RC[1] - RC[2])
    - const: 3.0
    - const: 1.0
    - null
    - null
    - null
    - null
    - null
    - const: 2.0
    - const: Subtraction (-)
    - const: -
  - cells:
    - const: 1.0
    - expr: =((RC[1] - RC[2]) - RC[3])
    - const: 5.0
    - const: 3.0
    - const: 1.0
    - null
    - null
    - null
    - null
    - const: 3.0
  - cells:
    - const: -4.4
    - expr: =((RC[1] - RC[2]) - RC[3])
    - const: 1.1
    - const: 2.2
    - const: 3.3
    - null
    - null
    - null
    - null
    - const: 3.0
    - const: ...
  - cells:
  - cells:
    - const: 35.0
    - expr: =(RC[1] * RC[2])
    - const: 5.0
    - const: 7.0
    - null
    - null
    - null
    - null
    - null
    - const: 2.0
    - const: Multiplication (*)
    - const: *
  - cells:
    - const: 0.2
    - expr: =(RC[1] * RC[2])
    - const: 0.4
    - const: 0.5
    - null
    - null
    - null
    - null
    - null
    - const: 2.0
    - const: ...
  - cells:
  - cells:
    - const: 7.0
    - expr: =(RC[1] + (RC[2] * RC[3]))
    - const: 1.0
    - const: 2.0
    - const: 3.0
    - null
    - null
    - null
    - null
    - const: 3.0
    - const: Precedence (* before +)
    - const: * ( )
  - cells:
    - const: 9.0
    - expr: =((RC[1] + RC[2]) * RC[3])
    - const: 1.0
    - const: 2.0
    - const: 3.0
    - null
    - null
    - null
    - null
    - const: 3.0
  - cells:
  - cells:
    - const: 2.5
    - expr: =(RC[1] / RC[2])
    - const: 10.0
    - const: 4.0
    - null
    - null
    - null
    - null
    - null
    - const: 2.0
    - const: Division (/)
    - const: /
  - cells:
    - const: 8.0
    - expr: =(RC[1] - (RC[2] / RC[3]))
    - const: 10.0
    - const: 4.0
    - const: 2.0
    - null
    - null
    - null
    - null
    - const: 3.0
  - cells:
    - const: 7.0
    - expr: =(RC[1] - (RC[2] / RC[3]))
    - const: 10.0
    - const: 9.0
    - const: 3.0
    - null
    - null
    - null
    - null
    - const: 3.0
    - const: ...
  - cells:
    - const: 9.666666667
    - expr: =(RC[1] - (RC[2] / RC[3]))
    - const: 10.0
    - const: 1.0
    - const: 3.0
    - null
    - null
    - null
    - null
    - const: 3.0
  - cells:
    - const: !NUM:Inf/AE
    - expr: =(RC[1] / RC[2])
    - const: 1.0
    - const: 0.0
    - null
    - null
    - null
    - null
    - null
    - const: 2.0
    - const: Division by zero for DOUBLE
    - const: /
    - const: #DIV/0!
  - cells:
  - cells:
    - const: -10.0
    - expr: =(-RC[1])
    - const: 10.0
    - null
    - null
    - null
    - null
    - null
    - null
    - const: 1.0
    - const: Negation (-)
    - const: -
  - cells:
    - const: -2.0
    - expr: =((-RC[1]) - (-RC[2]))
    - const: 5.0
    - const: 3.0
    - null
    - null
    - null
    - null
    - null
    - const: 2.0
  - cells:
    - const: -1.0
    - expr: =((-RC[1]) - (-RC[2]))
    - const: -3.0
    - const: -4.0
    - null
    - null
    - null
    - null
    - null
    - const: 2.0
    - const: ...
  - cells:
  - cells:
    - const: 0.15
    - expr: =(RC[1]%)
    - const: 15.0
    - null
    - null
    - null
    - null
    - null
    - null
    - const: 1.0
    - const: Percentage (%)
    - const: %
  - cells:
    - const: 5.13
    - expr: =((((RC[1] + RC[2])%) + RC[3]) + (RC[4]%))
    - const: 3.0
    - const: 4.0
    - const: 5.0
    - const: 6.0
    - null
    - null
    - null
    - const: 4.0
  - cells:
    - const: 3.377
    - expr: =((((RC[1] + RC[2])%) + RC[3]) + (RC[4]%))
    - const: 1.1
    - const: 2.2
    - const: 3.3
    - const: 4.4
    - null
    - null
    - null
    - const: 4.0
    - const: ...
  - cells:
  - cells:
    - const: 256.0
    - expr: =(RC[1] ^ RC[2])
    - const: 2.0
    - const: 8.0
    - null
    - null
    - null
    - null
    - null
    - const: 2.0
    - const: Exponentiation (^)
    - const: ^
  - cells:
    - const: 24.0
    - expr: =((RC[1] ^ RC[2]) + (RC[3] ^ (RC[4] + RC[5])))
    - const: 2.0
    - const: 3.0
    - const: 2.0
    - const: 1.0
    - const: 3.0
    - null
    - null
    - const: 5.0
  - cells:
    - const: 1240.0
    - expr: =((RC[1] ^ RC[2]) + (RC[3] ^ (RC[4] + RC[5])))
    - const: 4.0
    - const: 5.0
    - const: 6.0
    - const: 2.0
    - const: 1.0
    - null
    - null
    - const: 5.0
    - const: ...
  - cells:
  - cells:
    - const: 1.0
    - expr: =((RC[1] + RC[2]) - RC[3])
    - const: 1.0
    - null
    - null
    - null
    - null
    - null
    - null
    - const: 3.0
    - const: Empty cells are 0
  - cells:
    - const: 17.0
    - expr: =((RC[1] + RC[2]) - RC[3])
    - null
    - const: 17.0
    - null
    - null
    - null
    - null
    - null
    - const: 3.0
  - cells:
    - const: -2.0
    - expr: =((RC[1] + RC[2]) - RC[3])
    - const: 2.0
    - null
    - const: 4.0
    - null
    - null
    - null
    - null
    - const: 3.0
  - cells:
    - const: 0.0
    - expr: =(RC[1] * RC[2])
    - const: 3.0
    - null
    - null
    - null
    - null
    - null
    - null
    - const: 2.0
