/*
 * Copyright (c) 2006, 2008 by Abacus Research AG, Switzerland.
 * All rights reserved.
 *
 * This file is part of the Abacus Formula Compiler (AFC).
 *
 * For commercial licensing, please contact sales(at)formulacompiler.com.
 *
 * AFC is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * AFC is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with AFC.  If not, see <http://www.gnu.org/licenses/>.
 */

package org.formulacompiler.decompiler;

import java.io.IOException;

import org.formulacompiler.runtime.Engine;
import org.formulacompiler.runtime.ImplementationLocator;
import org.formulacompiler.runtime.FormulaRuntime;


/**
 * Provides methods to decompile engines generated by the Java bytecode generating backend of AFC.
 * 
 * @author peo
 */
public final class FormulaDecompiler extends FormulaRuntime
{

	/**
	 * Returns an object describing a compiled engine as decompiled Java source code.
	 */
	public static final ByteCodeEngineSource decompile( Engine _engine ) throws IOException
	{
		final ByteCodeEngineDecompiler.Config cfg = new ByteCodeEngineDecompiler.Config();
		cfg.engine = _engine;
		return DECOMPILER_FACTORY.newInstance( cfg ).decompile();
	}

	private static final ByteCodeEngineDecompiler.Factory DECOMPILER_FACTORY = ImplementationLocator
			.getInstance( ByteCodeEngineDecompiler.Factory.class );

}
