/*
 * Copyright (c) 2006, 2008 by Abacus Research AG, Switzerland.
 * All rights reserved.
 *
 * This file is part of the Abacus Formula Compiler (AFC).
 *
 * For commercial licensing, please contact sales(at)formulacompiler.com.
 *
 * AFC is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * AFC is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with AFC.  If not, see <http://www.gnu.org/licenses/>.
 */

package org.formulacompiler.runtime;

/**
 * Interface which is implemented by all computation factories generated by AFC. If you specify an
 * application-specific factory type to AFC's compiler, then you should cast the factory returned by
 * AFC to your own type immediately and not use this interface here.
 * 
 * @author peo
 */
public interface ComputationFactory
{

	/**
	 * Returns a new instance of a computation. You must cast the result to your application-specific
	 * output type for it to be of any use. This method is thread-safe.
	 * 
	 * @param _inputs defines the instance which gets called to obtain values for input cells in the
	 *           computation.
	 * @return a new computation instance, which is not thread-safe.
	 */
	public Computation newComputation( Object _inputs );

}