/*
 * Copyright (c) 2006 by Abacus Research AG, Switzerland.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without 
 * modification, are prohibited, unless you have been explicitly granted 
 * more rights by Abacus Research AG.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT 
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
 * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE 
 * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, 
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, 
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS 
 * OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND 
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR 
 * TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE 
 * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package org.formulacompiler.runtime;

import java.util.Locale;
import java.util.TimeZone;


/**
 * Marker interface which is implemented by all computations generated by AFC. The interface is for
 * documentation purposes only, meaning you always have to cast it to the application-specific
 * output type you supplied to AFC's compiler. If you specify an application-specific factory to
 * AFC, then this cast is not necessary as the factory already returns the proper
 * application-specific computation type.
 * 
 * @author peo
 */
public interface Computation
{


	/**
	 * Provides configuration information for an execution environment for computations.
	 * 
	 * @author peo
	 */
	public final class Config
	{

		/**
		 * Locale to use for, for example, labelling weekdays and months. If left {@code null} will
		 * use the default locale at the time the computation is run.
		 */
		public Locale locale = null;

		/**
		 * Time zone to use to, for example, convert spreadsheet-internal numeric dates to
		 * {@link java.util.Date}. If left {@code null} will use the default time zone at the time
		 * the computation is run.
		 */
		public TimeZone timeZone = null;


		/**
		 * Uses default settings for all fields.
		 */
		public Config()
		{
			super();
		}

		/**
		 * Overrides the {@link #locale} field.
		 */
		public Config(Locale _locale)
		{
			this.locale = _locale;
		}

		/**
		 * Overrides the {@link #timeZone} field.
		 */
		public Config(TimeZone _timeZone)
		{
			this.timeZone = _timeZone;
		}

		/**
		 * Overrides the {@link #locale} and {@link #timeZone} fields.
		 */
		public Config(Locale _locale, TimeZone _timeZone)
		{
			this.locale = _locale;
			this.timeZone = _timeZone;
		}

	}

}
